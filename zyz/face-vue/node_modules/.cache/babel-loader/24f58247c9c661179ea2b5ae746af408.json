{"ast":null,"code":"// 拍照上传组件\n// 父组件通过函数 getImg 获取照片路径,如 @getImg=\"getImg\"\nconst Address = \"\";\nexport default {\n  name: \"TakePhotos\",\n\n  data() {\n    return {};\n  },\n\n  methods: {\n    opening() {\n      let convas = document.querySelector('#canvas'); //\n\n      let video = document.querySelector('#video');\n      let audio = document.querySelector('audio');\n      let img = document.querySelector('#img');\n      let btn = document.querySelector('button');\n      let context = canvas.getContext('2d');\n      let width = 320; // 视频和canvas的宽度\n\n      let height = 0; //\n\n      let streaming = false; // 是否开始捕获媒体\n      // 老的浏览器可能根本没有实现 mediaDevices，所以我们可以先设置一个空的对象\n\n      if (navigator.mediaDevices == undefined) {\n        navigator.mediaDevices = {};\n      } // 获取用户媒体,包含视频和音频\n\n\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        video.srcObject = stream; // 将捕获的视频流传递给video  放弃window.URL.createObjectURL(stream)的使用\n\n        video.play(); //  播放视频\n\n        audio.srcObject = stream;\n        audio.play();\n      });\n    },\n\n    tackcapture() {\n      // 需要判断媒体流是否就绪\n      let convas = document.querySelector('#canvas'); //\n\n      let video = document.querySelector('#video');\n      let audio = document.querySelector('audio');\n      let img = document.querySelector('#img');\n      let btn = document.querySelector('button');\n      let context = canvas.getContext('2d');\n      let width = 320; // 视频和canvas的宽度\n\n      let height = 0; //\n\n      let streaming = true; // 是否开始捕获媒体\n\n      if (streaming) {\n        context.drawImage(video, 0, 0, 350, 200); // 将视频画面捕捉后绘制到canvas里面\n\n        img.src = canvas.toDataURL('image/png'); // 将canvas的数据传送到img里\n\n        alert(img.src); // 这边的值可以传入后端\n      } // 监听视频流就位事件,即视频可以播放了\n\n\n      video.addEventListener('canplay', function (ev) {\n        if (!streaming) {\n          height = video.videoHeight / (video.videoWidth / width);\n          video.setAttribute('width', width);\n          video.setAttribute('height', height);\n          canvas.setAttribute('width', width);\n          canvas.setAttribute('height', height);\n          streaming = true;\n        }\n      }, false);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["Address","name","data","methods","opening","convas","document","querySelector","video","audio","img","btn","context","canvas","getContext","width","height","streaming","navigator","mediaDevices","undefined","getUserMedia","then","stream","srcObject","play","tackcapture","drawImage","src","toDataURL","alert","addEventListener","ev","videoHeight","videoWidth","setAttribute"],"sourceRoot":"","sources":["/Users/zhanghaha/Documents/GitHub/nkucs2022-17/face-vue/src/views/HomeView.vue"],"sourcesContent":["<!--<template>-->\n<!--  <div class=\"home\">-->\n<!--    <el-button type=\"primary\">我是按钮</el-button>-->\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n<!--// @ is an alias to /src-->\n\n<!--export default {-->\n<!--  name: \"Home_view\",-->\n<!--};-->\n<!--</script>-->\n<template>\n  <div>\n    <article>\n      <section>\n        <video id=\"video\"></video>\n      </section>\n      <section>\n        <audio id=\"audio\"></audio>\n      </section>\n      <button id=\"btn\" @click=\"tackcapture\">拍照</button>\n      <button @click=\"opening\">开启</button>\n      <section>\n        <canvas id=\"canvas\"></canvas>\n      </section>\n      <section><img src=\"\" alt=\"\" id=\"img\" /></section>\n    </article>\n  </div>\n</template>\n\n<script>\n// 拍照上传组件\n// 父组件通过函数 getImg 获取照片路径,如 @getImg=\"getImg\"\nconst Address = \"\";\nexport default {\n  name: \"TakePhotos\",\n  data () {\n    return {}\n  },\n  methods: {\n    opening () {\n      let convas = document.querySelector('#canvas') //\n      let video = document.querySelector('#video')\n      let audio = document.querySelector('audio')\n      let img = document.querySelector('#img')\n      let btn = document.querySelector('button')\n      let context = canvas.getContext('2d')\n      let width = 320 // 视频和canvas的宽度\n      let height = 0 //\n      let streaming = false // 是否开始捕获媒体\n      // 老的浏览器可能根本没有实现 mediaDevices，所以我们可以先设置一个空的对象\n      if (navigator.mediaDevices == undefined) {\n        navigator.mediaDevices = {}\n      }\n      // 获取用户媒体,包含视频和音频\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          video.srcObject = stream // 将捕获的视频流传递给video  放弃window.URL.createObjectURL(stream)的使用\n          video.play() //  播放视频\n          audio.srcObject = stream\n          audio.play()\n        })\n    },\n    tackcapture () {\n      // 需要判断媒体流是否就绪\n      let convas = document.querySelector('#canvas') //\n      let video = document.querySelector('#video')\n      let audio = document.querySelector('audio')\n      let img = document.querySelector('#img')\n      let btn = document.querySelector('button')\n      let context = canvas.getContext('2d')\n      let width = 320 // 视频和canvas的宽度\n      let height = 0 //\n      let streaming = true // 是否开始捕获媒体\n      if (streaming) {\n        context.drawImage(video, 0, 0, 350, 200) // 将视频画面捕捉后绘制到canvas里面\n        img.src = canvas.toDataURL('image/png') // 将canvas的数据传送到img里\n        alert(img.src) // 这边的值可以传入后端\n      }\n\n      // 监听视频流就位事件,即视频可以播放了\n      video.addEventListener(\n        'canplay',\n        function (ev) {\n          if (!streaming) {\n            height = video.videoHeight / (video.videoWidth / width)\n\n            video.setAttribute('width', width)\n            video.setAttribute('height', height)\n            canvas.setAttribute('width', width)\n            canvas.setAttribute('height', height)\n            streaming = true\n          }\n        },\n        false\n      )\n    }\n  }\n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}