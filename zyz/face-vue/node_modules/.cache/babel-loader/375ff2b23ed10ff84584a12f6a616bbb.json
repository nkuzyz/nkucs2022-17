{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nexport default {\n  data() {\n    return {\n      videoWidth: 3000,\n      videoHeight: 300,\n      imgSrc: '',\n      thisCancas: null,\n      thisContext: null,\n      thisVideo: null\n    };\n  },\n\n  methods: {\n    // 调用权限（打开摄像头功能）\n    getCompetence() {\n      var _this = this;\n\n      this.thisCancas = document.getElementById('canvasCamera');\n      this.thisContext = this.thisCancas.getContext('2d');\n      this.thisVideo = document.getElementById('videoCamera'); // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\n\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      } // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\n      // 使用getUserMedia，因为它会覆盖现有的属性。\n      // 这里，如果缺少getUserMedia属性，就添加它。\n\n\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n          // 首先获取现存的getUserMedia(如果存在)\n          var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia; // 有些浏览器不支持，会返回错误信息\n          // 保持接口一致\n\n          if (!getUserMedia) {\n            return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n          } // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\n\n\n          return new Promise(function (resolve, reject) {\n            getUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n      }\n\n      var constraints = {\n        audio: false,\n        video: {\n          width: this.videoWidth,\n          height: this.videoHeight,\n          transform: 'scaleX(-1)'\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        // 旧的浏览器可能没有srcObject\n        if ('srcObject' in _this.thisVideo) {\n          _this.thisVideo.srcObject = stream;\n        } else {\n          // 避免在新的浏览器中使用它，因为它正在被弃用。\n          _this.thisVideo.src = window.URL.createObjectURL(stream);\n        }\n\n        _this.thisVideo.onloadedmetadata = function (e) {\n          _this.thisVideo.play();\n        };\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    //  绘制图片（拍照功能）\n    setImage() {\n      var _this = this; // 点击，canvas画图\n\n\n      _this.thisContext.drawImage(_this.thisVideo, 0, 0, _this.videoWidth, _this.videoHeight); // 获取图片base64链接\n\n\n      var image = this.thisCancas.toDataURL('image/png');\n      _this.imgSrc = image;\n      this.$emit('refreshDataList', this.imgSrc);\n    },\n\n    // base64转文件\n    dataURLtoFile(dataurl, filename) {\n      var arr = dataurl.split(',');\n      var mime = arr[0].match(/:(.*?);/)[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    },\n\n    // 关闭摄像头\n    stopNavigator() {\n      this.thisVideo.srcObject.getTracks()[0].stop();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["data","videoWidth","videoHeight","imgSrc","thisCancas","thisContext","thisVideo","methods","getCompetence","_this","document","getElementById","getContext","navigator","mediaDevices","undefined","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","Promise","reject","Error","resolve","call","audio","video","width","height","transform","then","stream","srcObject","src","window","URL","createObjectURL","onloadedmetadata","e","play","catch","err","console","log","setImage","drawImage","image","toDataURL","$emit","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","stopNavigator","getTracks","stop"],"sourceRoot":"","sources":["/Users/zhanghaha/Documents/GitHub/nkucs2022-17/face-vue/src/views/HomeView.vue"],"sourcesContent":["<!--<template>-->\n<!--  <div class=\"home\">-->\n<!--    <el-button type=\"primary\">我是按钮</el-button>-->\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n<!--// @ is an alias to /src-->\n\n<!--export default {-->\n<!--  name: \"Home_view\",-->\n<!--};-->\n<!--</script>-->\n<template>\n  <div class=\"camera_outer\">\n    <video\n      id=\"videoCamera\"\n      :width=\"videoWidth\"\n      :height=\"videoHeight\"\n      autoplay\n    ></video>\n    <canvas\n      style=\"display: none\"\n      id=\"canvasCamera\"\n      :width=\"videoWidth\"\n      :height=\"videoHeight\"\n    ></canvas>\n\n    <div v-if=\"imgSrc\" class=\"img_bg_camera\">\n      <img :src=\"imgSrc\" alt=\"\" class=\"tx_img\" />\n    </div>\n    <button @click=\"getCompetence()\">打开摄像头</button>\n    <button @click=\"stopNavigator()\">关闭摄像头</button>\n    <button @click=\"setImage()\">拍照</button>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n      return {\n      videoWidth: 3000,\n        videoHeight: 300,\n        imgSrc: '',\n        thisCancas: null,\n        thisContext: null,\n        thisVideo: null,\n      }\n    },\n    methods: {\n// 调用权限（打开摄像头功能）\n      getCompetence () {\n        var _this = this\n        this.thisCancas = document.getElementById('canvasCamera')\n        this.thisContext = this.thisCancas.getContext('2d')\n        this.thisVideo = document.getElementById('videoCamera')\n        // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\n        if (navigator.mediaDevices === undefined) {\n          navigator.mediaDevices = {}\n        }\n        // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\n        // 使用getUserMedia，因为它会覆盖现有的属性。\n        // 这里，如果缺少getUserMedia属性，就添加它。\n        if (navigator.mediaDevices.getUserMedia === undefined) {\n          navigator.mediaDevices.getUserMedia = function (constraints) {\n            // 首先获取现存的getUserMedia(如果存在)\n            var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia\n            // 有些浏览器不支持，会返回错误信息\n            // 保持接口一致\n            if (!getUserMedia) {\n              return Promise.reject(new Error('getUserMedia is not implemented in this browser'))\n            }\n            // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\n            return new Promise(function (resolve, reject) {\n              getUserMedia.call(navigator, constraints, resolve, reject)\n            })\n          }\n        }\n        var constraints = { audio: false, video: { width: this.videoWidth, height: this.videoHeight, transform: 'scaleX(-1)' } }\n        navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n          // 旧的浏览器可能没有srcObject\n          if ('srcObject' in _this.thisVideo) {\n            _this.thisVideo.srcObject = stream\n          } else {\n            // 避免在新的浏览器中使用它，因为它正在被弃用。\n            _this.thisVideo.src = window.URL.createObjectURL(stream)\n          }\n          _this.thisVideo.onloadedmetadata = function (e) {\n            _this.thisVideo.play()\n          }\n        }).catch(err => {\n          console.log(err)\n        })\n      },\n//  绘制图片（拍照功能）\n\n      setImage () {\n        var _this = this\n        // 点击，canvas画图\n        _this.thisContext.drawImage(_this.thisVideo, 0, 0, _this.videoWidth, _this.videoHeight)\n        // 获取图片base64链接\n        var image = this.thisCancas.toDataURL('image/png')\n        _this.imgSrc = image\n        this.$emit('refreshDataList', this.imgSrc)\n      },\n// base64转文件\n\n      dataURLtoFile (dataurl, filename) {\n        var arr = dataurl.split(',')\n        var mime = arr[0].match(/:(.*?);/)[1]\n        var bstr = atob(arr[1])\n        var n = bstr.length\n        var u8arr = new Uint8Array(n)\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n)\n        }\n        return new File([u8arr], filename, { type: mime })\n      },\n// 关闭摄像头\n\n      stopNavigator () {\n        this.thisVideo.srcObject.getTracks()[0].stop()\n      }\n    },\n\n  }\n\n  </script>\n  <style lang=\"less\" scoped>\n  .camera_outer{\n    position: relative;\n    overflow: hidden;\n    background: url(\"../../assets/img/user_0608_04.png\") no-repeat center;\n    background-size: 100%;\n    video,canvas,.tx_img{\n      -moz-transform:scaleX(-1);\n      -webkit-transform:scaleX(-1);\n      -o-transform:scaleX(-1);\n      transform:scaleX(-1);\n    }\n    .btn_camera{\n      position: absolute;\n      bottom: 4px;\n      left: 0;\n      right: 0;\n      height: 50px;\n      background-color: rgba(0,0,0,0.3);\n      line-height: 50px;\n      text-align: center;\n      color: #ffffff;\n    }\n    .bg_r_img{\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n    }\n    .img_bg_camera{\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n      img{\n        width: 100%;\n        height: 100%;\n      }\n      .img_btn_camera{\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 50px;\n        line-height: 50px;\n        text-align: center;\n        background-color: rgba(0,0,0,0.3);\n        color: #ffffff;\n        .loding_img{\n          width: 50px;\n          height: 50px;\n        }\n      }\n    }\n  }\n  </style>\n\n"]},"metadata":{},"sourceType":"module"}