{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"section\", null, [/*#__PURE__*/_createElementVNode(\"video\", {\n  id: \"video\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"section\", null, [/*#__PURE__*/_createElementVNode(\"audio\", {\n  id: \"audio\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"section\", null, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"canvas\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"section\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"\",\n  alt: \"\",\n  id: \"img\"\n})], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"article\", null, [_hoisted_1, _hoisted_2, _createElementVNode(\"button\", {\n    id: \"btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.tackcapture && $options.tackcapture(...args))\n  }, \"拍照\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.opening && $options.opening(...args))\n  }, \"开启\"), _hoisted_3, _hoisted_4])]);\n}","map":{"version":3,"mappings":";;gCAgBMA,oBAEU,SAFV,EAEU,IAFV,EAEU,cADRA,oBAA0B,OAA1B,EAA0B;EAAnBC,EAAE,EAAC;AAAgB,CAA1B,CACQ,CAFV;;AAAA;;gCAGAD,oBAEU,SAFV,EAEU,IAFV,EAEU,cADRA,oBAA0B,OAA1B,EAA0B;EAAnBC,EAAE,EAAC;AAAgB,CAA1B,CACQ,CAFV;;AAAA;;gCAKAD,oBAEU,SAFV,EAEU,IAFV,EAEU,cADRA,oBAA6B,QAA7B,EAA6B;EAArBC,EAAE,EAAC;AAAkB,CAA7B,CACQ,CAFV;;AAAA;;gCAGAD,oBAAiD,SAAjD,EAAiD,IAAjD,EAAiD,cAAxCA,oBAA8B,KAA9B,EAA8B;EAAzBE,GAAG,EAAC,EAAqB;EAAlBC,GAAG,EAAC,EAAc;EAAXF,EAAE,EAAC;AAAQ,CAA9B,CAAwC,CAAjD;;AAAA;;;uBAbJG,oBAeM,KAfN,EAeM,IAfN,EAeM,CAdJJ,oBAaU,SAbV,EAaU,IAbV,EAaU,CAZRK,UAYQ,EATRC,UASQ,EANRN,oBAAiD,QAAjD,EAAiD;IAAzCC,EAAE,EAAC,KAAsC;IAA/BM,OAAK,yCAAEC,qDAAF;EAA0B,CAAjD,EAAsC,IAAtC,CAMQ,EALRR,oBAAoC,QAApC,EAAoC;IAA3BO,OAAK,yCAAEC,6CAAF;EAAsB,CAApC,EAAyB,IAAzB,CAKQ,EAJRC,UAIQ,EADRC,UACQ,CAbV,CAcI,CAfN","names":["_createElementVNode","id","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$options","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["/Users/zhanghaha/Documents/GitHub/nkucs2022-17/face-vue/src/views/HomeView.vue"],"sourcesContent":["<!--<template>-->\n<!--  <div class=\"home\">-->\n<!--    <el-button type=\"primary\">我是按钮</el-button>-->\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n<!--// @ is an alias to /src-->\n\n<!--export default {-->\n<!--  name: \"Home_view\",-->\n<!--};-->\n<!--</script>-->\n<template>\n  <div>\n    <article>\n      <section>\n        <video id=\"video\"></video>\n      </section>\n      <section>\n        <audio id=\"audio\"></audio>\n      </section>\n      <button id=\"btn\" @click=\"tackcapture\">拍照</button>\n      <button @click=\"opening\">开启</button>\n      <section>\n        <canvas id=\"canvas\"></canvas>\n      </section>\n      <section><img src=\"\" alt=\"\" id=\"img\" /></section>\n    </article>\n  </div>\n</template>\n\n<script>\n// 拍照上传组件\n// 父组件通过函数 getImg 获取照片路径,如 @getImg=\"getImg\"\nconst Address = \"\";\nexport default {\n  name: \"TakePhotos\",\n  data () {\n    return {}\n  },\n  methods: {\n    opening () {\n      let convas = document.querySelector('#canvas') //\n      let video = document.querySelector('#video')\n      let audio = document.querySelector('audio')\n      let img = document.querySelector('#img')\n      let btn = document.querySelector('button')\n      let context = canvas.getContext('2d')\n      let width = 320 // 视频和canvas的宽度\n      let height = 0 //\n      let streaming = false // 是否开始捕获媒体\n      // 老的浏览器可能根本没有实现 mediaDevices，所以我们可以先设置一个空的对象\n      if (navigator.mediaDevices == undefined) {\n        navigator.mediaDevices = {}\n      }\n      // 获取用户媒体,包含视频和音频\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          video.srcObject = stream // 将捕获的视频流传递给video  放弃window.URL.createObjectURL(stream)的使用\n          video.play() //  播放视频\n          audio.srcObject = stream\n          audio.play()\n        })\n    },\n    tackcapture () {\n      // 需要判断媒体流是否就绪\n      let convas = document.querySelector('#canvas') //\n      let video = document.querySelector('#video')\n      let audio = document.querySelector('audio')\n      let img = document.querySelector('#img')\n      let btn = document.querySelector('button')\n      let context = canvas.getContext('2d')\n      let width = 320 // 视频和canvas的宽度\n      let height = 0 //\n      let streaming = true // 是否开始捕获媒体\n      if (streaming) {\n        context.drawImage(video, 0, 0, 350, 200) // 将视频画面捕捉后绘制到canvas里面\n        img.src = canvas.toDataURL('image/png') // 将canvas的数据传送到img里\n        alert(img.src) // 这边的值可以传入后端\n      }\n\n      // 监听视频流就位事件,即视频可以播放了\n      video.addEventListener(\n        'canplay',\n        function (ev) {\n          if (!streaming) {\n            height = video.videoHeight / (video.videoWidth / width)\n\n            video.setAttribute('width', width)\n            video.setAttribute('height', height)\n            canvas.setAttribute('width', width)\n            canvas.setAttribute('height', height)\n            streaming = true\n          }\n        },\n        false\n      )\n    }\n  }\n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}